from __future__ import division

import googlemaps
import random
import time
from types import NoneType

from openpyxl import Workbook, load_workbook
import openpyxl

import itertools as it
import matplotlib.pyplot as plt
import networkx as nx
import numpy as np




absolute_directory = "D:\\Users\\Hegxiten\\workspace\\CEE512\\"
fn = "data.xlsx"
#cond_start = int(raw_input("Where does conductor start: "))
#shift_time = float(raw_input("Shift time limitation in min: "))

def rand_coord(n=20):
    bbox_lat = [41.2,   41.3]
    bbox_lng = [-105.0, -100.5]
    
    lat=[]
    lng=[]
    time=[]
    for i in range(n):
        lat.append(random.uniform(bbox_lat[0],bbox_lat[1]))
        lng.append(random.uniform(bbox_lng[0],bbox_lng[1]))
    duration=list(np.random.normal(20,5,n)/60)
    print lat
    print lng
    print duration
    
#rand_coord(n=20)

def googlemap_pull((orig_lat, orig_lng),(dest_lat, dest_lng)):
    gmaps = googlemaps.Client(key = 'AIzaSyDb3zT-Q-1EaXKLKsnvVrYPbyd0KriIdVk')
    direction_result = gmaps.directions(origin = '41.279778804466424, -103.08559157617718',
                                        destination = '41.258019389566435, -104.88084688621865',
                                        mode = 'driving')
    print direction_result[0]
    


def data_init(sample = True, WE_number = 20):
    
    if sample:
        lat = []
        lng = []
        stt = []
        dur = []
        
        WE_ind_list = []
        
        
        #=======================================================================
        # WExstr = '126.6644347    133.9647889    202.5735652    81.35277241    70.90657674    123.8117143    249.1785663    142.5841096    233.8498302    34.83084512    258.6229286    283.8504342    4.664852002    94.09322035    190.2300003    76.32967966    176.8538531    104.1090435    153.9908383    94.50654568    176.5765181    259.975164    51.19597459    256.8350699    138.2533771    150.932071    261.6246317    215.8613817    204.5801653    193.8023947    139.9843049    118.9978267    133.8622901    243.911081    294.6738265    139.8157851    4.996791243    42.35198115    267.3515073    167.9894702    144.6819721    239.8440172    84.63630197    205.8707526    124.7179123    175.539346    99.93582487    42.92852018    292.2977799    10.96481426    54.96470368    212.863307    276.4125474    166.6796155    148.572871    67.95636091    73.90262928    94.10551232    60.65986548    169.1634004    204.3729906    241.8446962    232.2056342    110.9287656    120.2606201    6.163565323    3.368774613    0.9332287    269.2720068    230.6800187    26.53005827    84.15836475    210.0739215    170.2358316    209.8899334    145.2067925    213.7184144    110.5336582    193.2436585    176.4665881    72.9039451    295.6243872    300    123.0488612    87.94352588    209.7236777    153.9011703    35.17074703    233.5683513    233.3398078    2.592988439    244.2941078    144.9928197    4.033522014    39.399232    278.8517191    1.538969606    244.2941078    166.3481278    63.60806638' #distance
        # WEtstr = '8.798570808    7.072111538    2.252202632    2.228952632    6.792078218    5.213177145    4.388244719    8.215310798    7.426096437    5.222111538    10.78180025    6.045619299    11.08173105    5.809945316    8.122111538    11.56417933    4.028952632    3.956558044    8.415310798    4.123224711    5.554911385    5.595619299    6.476611983    7.809429771    4.963177145    4.926611983    4.188244719    7.126096437    5.104911385    8.188778205    10.46960996    5.296510479    3.368869298    11.04846692    10.88197746    7.942078218    3.609429771    1.684696068    1.123224711    8.198570808    7.272111538    4.538244719    4.168869298    7.648570808    6.388244719    5.571578052    5.192763104    8.736276627    2.296510479    5.573224711    4.442763104    7.076096437    1.052202632    2.835535965    6.004911385    4.659429771    6.842078218    7.365310798    9.052943294    4.643278649    11.76513359    7.559429771    8.905444871    5.376096437    2.962285966    5.656558044    8.338244719    7.986276627    1.089891377    3.363177145    6.859945316    11.69751266    9.398644131    4.626611983    11.66513359    3.384696068    9.175411551    2.778952632    7.831904142    3.901362734    6.825411551    10.89864413    2.163177145    5.359945316    4.992763104    9.108744885    6.092763104    6.331977464    3.313177145    1.752202632    5.502202632    9.998644131    4.846510479    1.051362734    6.659945316    10.41513359    7.329843812    9.998644131    8.631977464    11.34751266' #time
        # WEindex = '1    2    3    4    5    6    7    8    9    10    11    12    13    14    15    16    17    18    19    20    21    22    23    24    25    26    27    28    29    30    31    32    33    34    35    36    37    38    39    40    41    42    43    44    45    46    47    48    49    50    51    52    53    54    55    56    57    58    59    60    61    62    63    64    65    66    67    68    69    70    71    72    73    74    75    76    77    78    79    80    81    82    83    84    85    86    87    88    89    90    91    92    93    94    95    96    97    98    99    100'        
        #=======================================================================
        
        
        #select UP Cheyenne North Platte route as the considered area, uniformly generate 20 WE points
        WElatstr    = '41.279778804466424, 41.258019389566435, 41.217664468305195, 41.2935497470303, 41.238747746884776, 41.23201777066423, 41.29970166385342, 41.273541544109065, 41.21431470106806, 41.24528613088103, 41.27607481855932, 41.29776819579983, 41.22053062102437, 41.25252035618934, 41.215877192984394, 41.26857265790092, 41.27019553927935, 41.20813844607635, 41.28908907574969, 41.23830574520061' 
        WElngstr    = '-103.08559157617718, -104.88084688621865, -101.89760807090936, -104.9195255481811, -102.56907699020562, -104.06092084697758, -104.05572423074183, -103.0117801751877, -104.64001567651586, -103.16170217015734, -104.32301998322963, -103.0882872939988, -101.23301169203864, -104.27760970841054, -103.81624531347519, -101.5102622369134, -100.71618434825172, -102.59767218932598, -100.80516122803984, -102.35629580355928'
        #generate uniformly distributed WE start time between 0 and 12 hours
        WEsttstr    = '7.1423100237514365, 9.388630848053038, 1.360161060162016, 6.625393795853185, 7.460120494072823, 9.515015696677988, 0.0259798592077205, 1.8376243040053524, 0.4925156491675895, 9.37612409287227, 8.163553822023855, 2.4433467170328695, 3.8588526684279936, 4.419304655309955, 9.45536368486506, 1.2425979157879148, 11.597811514426091, 9.496126732648278, 3.2183945333432447, 5.109136059923353' 
        #generate normal distribution of WE duration with average duration of 20 min, SD 5 mins
        WEdurstr    = '0.42449776154692792, 0.26501475439776717, 0.39894878640862791, 0.34857063076487038, 0.27396126398983511, 0.40763516532307409, 0.32698148118256931, 0.31968678346650964, 0.3789832478551079, 0.29261893725066801, 0.30052649629580291, 0.47118283090576246, 0.29959137270904251, 0.2922054129607497, 0.42145022176783592, 0.36139167635080588, 0.44942218590112143, 0.43980322495483654, 0.35818188036111898, 0.28879831400930839'
        WEindex     = '1    2    3    4    5    6    7    8    9    10    11    12    13    14    15    16    17    18    19    20'     
        
        lat = [float(n) for n in WElatstr.split(',')]
        lng = [float(n) for n in WElngstr.split(',')]
        stt = [float(n) for n in WEsttstr.split(',')]
        dur = [float(n) for n in WEdurstr.split(',')]
        WE_ind_list = [int(n) for n in WEindex.split(',')]
    
    w_e_dict = {}

    we_pool = []
    
    for i in WE_ind_list: # connects distance and time as a coordinate
        we_pool.append((i,
                          {'property'   :'WE',
                           'label'      :str(i),
                           'coord'      :(lat[WE_ind_list.index(i)],lng[WE_ind_list.index(i)]),
                           'time'       :stt[WE_ind_list.index(i)],
                           'duration'   :dur[WE_ind_list.index(i)]
                           }
                          ))
    
    return we_pool

